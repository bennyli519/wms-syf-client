name: deployment
on:
  # 代码push的时候触发
  push:
    # main分支的时候触发
    branches: main
jobs:
  # 定义一个job，名字为CI
  CI:
    # 使用github提供给我们的机器去跑
    runs-on: ubuntu-latest
    # 步骤
    steps:
      # 拉取最新的代码
      - name: Checkout repository
        uses: actions/checkout@v2
      # 安装node环境
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
      # 为node_modules设置缓存
      - name: Cache
        # 缓存命中结果会存储在steps.[id].outputs.cache-hit里，该变量在继后的step中可读
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          # 缓存文件目录的路径
          path: |
            **/node_modules
          key: ${{runner.OS}}
      # 安装依赖
      - name: Installing Dependencies
        # 如果命中缓存，就不需要安装依赖，使用缓存即可
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install
      # 打包
      - name: Build
        run: yarn build
      # 准备远程目录
      - name: Prepare remote directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.D_HOST }}
          username: ${{ secrets.D_USER }}
          key: ${{ secrets.D_PASS }}
          script: |
            rm -rf /www/wwwroot/wms-client/*
            mkdir -p /www/wwwroot/wms-client
            chmod 755 /www/wwwroot/wms-client
      # 部署到服务器
      - name: Deploy to Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.D_HOST }}
          username: ${{ secrets.D_USER }}
          key: ${{ secrets.D_PASS }}
          source: "dist/*"
          target: "/www/wwwroot/wms-client"
          strip_components: 1